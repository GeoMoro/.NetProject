@using Presentation.Models.PresenceViewModels
@model Presentation.Models.PresenceViewModels.UserStatusEditModel
@inject SignInManager<ApplicationUser> SignInManager
@inject UserManager<ApplicationUser> UserManager
@{
    ViewData["Title"] = "Edit Presence";
}

<h2>Edit</h2>

<h4>Presence</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        @using (Html.BeginForm("UpdatePresence", "Presences", new { attendanceId = @TempData["value"] }, FormMethod.Post, null, new { }))
        {
            <div class="form-group">
                <label asp-for="Presence" class="control-label"></label>
                <input asp-for="Presence" class="form-control" />
                <span asp-validation-for="Presence" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="KataMark" class="control-label"></label>
                <input asp-for="KataMark" class="form-control" />
                <span asp-validation-for="KataMark" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="LaboratoryMark" class="control-label"></label>
                <input asp-for="LaboratoryMark" class="form-control" />
                <span asp-validation-for="LaboratoryMark" class="text-danger"></span>
            </div>
            <div class="form-group">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        }
    </div>
</div>

<div>
    <a asp-action="Index">Back to List</a>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}