@model Business.ServicesInterfaces.Models.UploadsViewModels.UploadsCreateModel
@inject SignInManager<ApplicationUser> SignInManager
@inject UserManager<ApplicationUser> UserManager
@{
    ViewData["Title"] = "Create";
}

<environment include="Development">
    <link href="~/lib/bootstrap/dist/css/bootstrap.min.css" rel="stylesheet" />
</environment>

<h2>Submit</h2>

<h4>Homework</h4>
<hr />
<div class="row">
    <div class="col-md-4">
    @{
        var currentUser = UserManager.Users.SingleOrDefault(user => user.Id == UserManager.GetUserId(User));
        var listTeachers = new List<SelectListItem>();
        var listWeek = new List<SelectListItem>();
        var listTypes= new List<SelectListItem>()
        {
            new SelectListItem { Text = "Laboratory", Value = "Laboratory" },
            new SelectListItem { Text = "Kata", Value = "Kata", Selected = true }
        };

        foreach (var user in UserManager.GetUsersInRoleAsync("Assistant").Result)
        {
            listTeachers.Add(new SelectListItem
            {
                Text = @user.FirstName + " " + @user.LastName,
                Value = @user.FirstName + @user.LastName
            });
        }

        foreach (var user in UserManager.GetUsersInRoleAsync("Owner").Result)
        {
            listTeachers.Add(new SelectListItem
            {
                Text = @user.FirstName + " " + @user.LastName,
                Value = @user.FirstName + @user.LastName
            });
        }

        for (var index = 1; index <= 7; ++index)
        {
            listWeek.Add(new SelectListItem
            {
                Text = "Week " + index.ToString(),
                Value = index.ToString()
            });
        }


        using (Html.BeginForm("Create", "Uploads", new { userGroup = currentUser.Group, userFirstName = currentUser.FirstName, userLastName = currentUser.LastName }, FormMethod.Post, null, new { enctype = "multipart/form-data" }))
        {
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                <label asp-for="Type" class="control-label"></label>
                <br />
                @Html.DropDownListFor(model => model.Type, listTypes, new { @class = "btn btn-default" })
                <span asp-validation-for="Type" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Week" class="control-label"></label>
                <br />
                @Html.DropDownListFor(model => model.Week, listWeek, new { @class = "btn btn-default" })
                <span asp-validation-for="Week" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Teacher" class="control-label"></label>
                <br />
                @Html.DropDownListFor(model => model.Teacher, listTeachers, new { @class = "btn btn-default" })
                <span asp-validation-for="Teacher" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="File" class="control-label"></label>
                <input enctype="multipart/form-data" type="file" multiple="multiple" asp-for="File" class="form-control" />
            </div>  
            <div class="form-group">
                <input type="submit" value="Submit" class="btn btn-default" />
            </div>
            }
        <span class="text-danger"><strong>Reminder: </strong>Only archives are allowed to upload!</span>
    }
</div>
</div>

<div>
    <a class="btn btn-default" asp-action="Index">Back to List</a>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/1.11.3/jquery.min.js"></script>
    <script src="~/lib/jquery/dist/jquery.min.js"></script>
    <script src="~/ckeditor/ckeditor.js"></script>
}
